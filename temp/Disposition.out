\BOOKMARK [0][-]{chapter.1}{Divide and Conquer}{}% 1
\BOOKMARK [1][-]{section.1.1}{Definition}{chapter.1}% 2
\BOOKMARK [1][-]{section.1.2}{Divide and Conquer s. 65}{chapter.1}% 3
\BOOKMARK [1][-]{section.1.3}{MERGE-SORT}{chapter.1}% 4
\BOOKMARK [1][-]{section.1.4}{K\370retid}{chapter.1}% 5
\BOOKMARK [1][-]{section.1.5}{Rekursions tr\346}{chapter.1}% 6
\BOOKMARK [1][-]{section.1.6}{Substitution}{chapter.1}% 7
\BOOKMARK [1][-]{section.1.7}{Master Theorem}{chapter.1}% 8
\BOOKMARK [1][-]{section.1.8}{Quicksort S. 170}{chapter.1}% 9
\BOOKMARK [2][-]{subsection.1.8.1}{Running time}{section.1.8}% 10
\BOOKMARK [1][-]{section.1.9}{Closest pair of points s. 1039}{chapter.1}% 11
\BOOKMARK [0][-]{chapter.2}{Priorty queues and Heaps s. 151}{}% 12
\BOOKMARK [1][-]{section.2.1}{Definition s.151-153}{chapter.2}% 13
\BOOKMARK [1][-]{section.2.2}{Heap Property s. 154}{chapter.2}% 14
\BOOKMARK [1][-]{section.2.3}{Max-Heapify}{chapter.2}% 15
\BOOKMARK [1][-]{section.2.4}{Build-Max-Heap s. 156}{chapter.2}% 16
\BOOKMARK [2][-]{subsection.2.4.1}{k\370retid s. 157}{section.2.4}% 17
\BOOKMARK [2][-]{subsection.2.4.2}{Heapsort}{section.2.4}% 18
\BOOKMARK [1][-]{section.2.5}{Priorty queues}{chapter.2}% 19
\BOOKMARK [0][-]{chapter.3}{Binary Search Trees}{}% 20
\BOOKMARK [1][-]{section.3.1}{Definition}{chapter.3}% 21
\BOOKMARK [1][-]{section.3.2}{BST operations and running time}{chapter.3}% 22
\BOOKMARK [2][-]{subsection.3.2.1}{Inorder Tree Walk Theroem 12.1}{section.3.2}% 23
\BOOKMARK [1][-]{section.3.3}{Delete}{chapter.3}% 24
\BOOKMARK [1][-]{section.3.4}{Red-Black-Trees}{chapter.3}% 25
\BOOKMARK [2][-]{subsection.3.4.1}{Definition}{section.3.4}% 26
\BOOKMARK [2][-]{subsection.3.4.2}{Lemma 13.1}{section.3.4}% 27
\BOOKMARK [2][-]{subsection.3.4.3}{Rotation}{section.3.4}% 28
\BOOKMARK [2][-]{subsection.3.4.4}{Insertion}{section.3.4}% 29
\BOOKMARK [2][-]{subsection.3.4.5}{Deletion}{section.3.4}% 30
\BOOKMARK [0][-]{chapter.4}{Dynamic Programming}{}% 31
\BOOKMARK [1][-]{section.4.1}{Memoized}{chapter.4}% 32
\BOOKMARK [2][-]{subsection.4.1.1}{Top-down}{section.4.1}% 33
\BOOKMARK [2][-]{subsection.4.1.2}{Bottom-up}{section.4.1}% 34
\BOOKMARK [1][-]{section.4.2}{LCS Theorem 15.1}{chapter.4}% 35
\BOOKMARK [2][-]{subsection.4.2.1}{15.1}{section.4.2}% 36
\BOOKMARK [2][-]{subsection.4.2.2}{Rekursiv l\370sning}{section.4.2}% 37
\BOOKMARK [2][-]{subsection.4.2.3}{computing LCS}{section.4.2}% 38
\BOOKMARK [2][-]{subsection.4.2.4}{The solution}{section.4.2}% 39
\BOOKMARK [1][-]{section.4.3}{B\345nd til Greedy Algoritmer}{chapter.4}% 40
\BOOKMARK [0][-]{chapter.5}{Greedy Algorithms}{}% 41
\BOOKMARK [1][-]{section.5.1}{Huffman}{chapter.5}% 42
\BOOKMARK [2][-]{subsection.5.1.1}{Lemma 16.2}{section.5.1}% 43
\BOOKMARK [2][-]{subsection.5.1.2}{Lemma 16.3}{section.5.1}% 44
\BOOKMARK [2][-]{subsection.5.1.3}{kontradiktion}{section.5.1}% 45
\BOOKMARK [0][-]{chapter.6}{Minimum Spanning Trees}{}% 46
\BOOKMARK [1][-]{section.6.1}{Theorem 23.1}{chapter.6}% 47
\BOOKMARK [1][-]{section.6.2}{Kruskal}{chapter.6}% 48
\BOOKMARK [1][-]{section.6.3}{Prims algoritme}{chapter.6}% 49
\BOOKMARK [0][-]{chapter.7}{Shortest Path}{}% 50
\BOOKMARK [1][-]{section.7.1}{lemma 24.1}{chapter.7}% 51
\BOOKMARK [1][-]{section.7.2}{Relax}{chapter.7}% 52
\BOOKMARK [1][-]{section.7.3}{Bellman-Ford Algoritmen}{chapter.7}% 53
\BOOKMARK [2][-]{subsection.7.3.1}{correctness 24.4}{section.7.3}% 54
\BOOKMARK [1][-]{section.7.4}{Dijkstra Algoritme}{chapter.7}% 55
\BOOKMARK [2][-]{subsection.7.4.1}{correctness 24.6}{section.7.4}% 56
